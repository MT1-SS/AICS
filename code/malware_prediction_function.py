
# Malware Prediction Function
import joblib
import pandas as pd
import numpy as np

def predict_malware(file_features):
    """
    Predict if a PE file is malware based on its features

    Args:
        file_features (dict): Dictionary containing PE file features

    Returns:
        tuple: (prediction, probability)
    """
    # Load saved artifacts
    model = joblib.load('best_malware_classifier.pkl')
    scaler = joblib.load('feature_scaler.pkl')
    feature_names = joblib.load('selected_features.pkl')

    # Create feature vector
    feature_vector = []
    for feature in feature_names:
        feature_vector.append(file_features.get(feature, 0))

    # Convert to DataFrame
    X = pd.DataFrame([feature_vector], columns=feature_names)

    # Scale features if needed (for SVM/Logistic Regression)
    X_scaled = scaler.transform(X)
    X_scaled = pd.DataFrame(X_scaled, columns=feature_names)

    # Make prediction
    prediction = model.predict(X_scaled)[0]
    probability = model.predict_proba(X_scaled)[0][1]

    return prediction, probability

# Example usage:
# features = {
#     'SectionsMeanEntropy': 6.5,
#     'ImportsNb': 150,
#     'SizeOfCode': 50000,
#     # ... other features
# }
# pred, prob = predict_malware(features)
# print(f"Prediction: {'Malware' if pred == 1 else 'Benign'} (confidence: {prob:.3f})")
